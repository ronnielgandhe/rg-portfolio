---
import type { CollectionEntry } from 'astro:content';
import { FaRegFolderClosed } from 'react-icons/fa6';
import MobileDock from '../components/global/MobileDock';
import DesktopDock from '../components/global/DesktopDock';
import Nav from '../components/global/Nav';
import Pill from '../components/Pill.astro';
import 'katex/dist/katex.min.css';
import '../styles/prose.css';
import '../styles/code.css';
import '../styles/math.css';

export interface Props {
  post: CollectionEntry<'blog'>;
  backgroundMap: Record<string, string>;
  recentPosts?: Array<{
    title: string;
    slug: string;
    publishedAt: string;
    readingTime: number;
  }>;
}

const { post, backgroundMap, recentPosts } = Astro.props;
const { Content } = await post.render();
const currentBg = 'bg-1';

function formatDate(dateString: string) {
  return new Date(dateString).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
}
---

<div class="relative w-screen min-h-screen overflow-x-hidden">
  <!-- Background -->
  <div
    class="fixed inset-0 bg-cover bg-center"
    style={`background-image: url(${backgroundMap[currentBg]})`}
  />

  <!-- Navbar -->
  <div class="relative z-10">
    <Nav client:load currentPath="/blog" recentPosts={recentPosts} />
  </div>

  <!-- Main Content -->
  <div class="relative z-0 pt-12 pb-32 px-4">
    <div class="max-w-none mx-auto" style="max-width: 90ch;">
      <!-- Back Button -->
      <div class="mb-6">
        <a
          href="/blog"
          class="inline-flex items-center space-x-2 text-gray-300 hover:text-white transition-colors font-mono text-sm glass px-4 py-2 rounded"
        >
          <span class="text-green-400">$</span>
          <span>cd ..</span>
        </a>
      </div>

      <!-- Blog Post Terminal Window -->
      <div class="glass rounded-lg overflow-hidden shadow-2xl">
        <!-- Terminal Title Bar -->
        <div class="bg-gray-800 h-6 flex items-center space-x-2 px-4">
          <div class="w-3 h-3 rounded-full bg-red-500"></div>
          <div class="w-3 h-3 rounded-full bg-yellow-500"></div>
          <div class="w-3 h-3 rounded-full bg-green-500"></div>
          <span class="text-sm text-gray-300 flex-grow text-center font-semibold flex items-center justify-center gap-2">
            <FaRegFolderClosed size={14} className="text-gray-300" />
            {post.data.slug} — blog post
          </span>
        </div>

        <!-- Terminal Content -->
        <div class="p-8 lg:p-12">
          <!-- Header -->
          <header class="mb-10">
            <h1 class="text-4xl lg:text-5xl font-bold text-white mb-6 font-mono leading-tight" style="letter-spacing: -0.02em;">
              {post.data.title}
            </h1>

            <!-- Metadata -->
            <div class="flex flex-wrap items-center gap-4 text-sm text-gray-400 font-mono mb-5">
              <span class="flex items-center space-x-2">
                <span class="text-green-400">$</span>
                <span>published {formatDate(post.data.publishedAt)}</span>
              </span>
              {post.data.readingTime && (
                <>
                  <span class="text-gray-600">•</span>
                  <span>{post.data.readingTime} min read</span>
                </>
              )}
            </div>

            <!-- Tags -->
            {post.data.tags && post.data.tags.length > 0 && (
              <div class="flex flex-wrap gap-2">
                {post.data.tags.map((tag: string) => (
                  <Pill text={`#${tag}`} variant="accent" />
                ))}
              </div>
            )}
          </header>

          <!-- Article Content with enhanced typography -->
          <article class="prose">
            <Content />
          </article>

          <!-- Footer -->
          <footer class="mt-16 pt-8 border-t border-gray-700/50">
            <div class="text-center">
              <p class="text-gray-400 mb-4 font-mono text-sm">
                <span class="text-green-400">$</span> echo "Thanks for reading!"
              </p>
              <a
                href="mailto:ronnielgandhe@gmail.com"
                class="inline-flex items-center gap-2 px-6 py-3 bg-green-500/20 text-green-400 border border-green-500/30 rounded-lg hover:bg-green-500/30 transition-all font-mono text-sm"
              >
                <span>Send me an email</span>
                <span>→</span>
              </a>
            </div>
          </footer>
        </div>
      </div>
    </div>
  </div>

  <!-- Docks -->
  <MobileDock client:load />
  <DesktopDock client:load />
</div>

<script>
  import { initCopyButtons } from '../scripts/copy-code';
  initCopyButtons();
</script>

<style>
  /* Enhanced code blocks with title bars */
  :global(.prose pre) {
    position: relative;
    background-color: var(--code-bg) !important;
    border: 1px solid var(--code-border);
    border-radius: 0.5rem;
    padding: 1.25rem 1rem !important;
    overflow-x: auto;
    margin: 2em 0 !important;
    line-height: 1.7;
  }

  :global(.prose pre code) {
    background: transparent !important;
    color: var(--code-text) !important;
    padding: 0 !important;
    font-size: 0.875rem;
    font-family: 'SF Mono', 'JetBrains Mono', 'Menlo', 'Monaco', 'Courier New', monospace;
  }

  /* Scrollbar for code blocks */
  :global(.prose pre::-webkit-scrollbar) {
    height: 0.5rem;
  }

  :global(.prose pre::-webkit-scrollbar-track) {
    background: var(--code-scrollbar-track);
    border-radius: 0.25rem;
  }

  :global(.prose pre::-webkit-scrollbar-thumb) {
    background: var(--code-scrollbar-thumb);
    border-radius: 0.25rem;
  }

  :global(.prose pre::-webkit-scrollbar-thumb:hover) {
    background: var(--code-scrollbar-thumb-hover);
  }

  /* Copy button positioning */
  :global(.prose .code-block) {
    position: relative;
  }

  /* Math display adjustments */
  :global(.prose .katex-display) {
    overflow-x: auto;
    overflow-y: hidden;
  }

  /* Callout styles */
  :global(.prose .callout) {
    padding: 1.25rem 1.5rem;
    border-radius: 0.5rem;
    border: 1px solid;
    margin: 2em 0;
  }

  :global(.prose .callout-info) {
    border-left: 4px solid var(--info-border);
    background-color: var(--info-bg);
    border-color: var(--info-border);
  }

  :global(.prose .callout-warn) {
    border-left: 4px solid var(--warn-border);
    background-color: var(--warn-bg);
    border-color: var(--warn-border);
  }

  :global(.prose .callout-tip) {
    border-left: 4px solid var(--tip-border);
    background-color: var(--tip-bg);
    border-color: var(--tip-border);
  }

  :global(.prose .callout-header) {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 0.75rem;
    font-weight: 600;
    font-size: 1rem;
  }

  :global(.prose .callout-icon) {
    font-size: 1.25rem;
    line-height: 1;
  }

  :global(.prose .callout-info .callout-icon),
  :global(.prose .callout-info .callout-title) {
    color: var(--info);
  }

  :global(.prose .callout-warn .callout-icon),
  :global(.prose .callout-warn .callout-title) {
    color: var(--warn);
  }

  :global(.prose .callout-tip .callout-icon),
  :global(.prose .callout-tip .callout-title) {
    color: var(--tip);
  }

  :global(.prose .callout-title) {
    font-size: 1rem;
    font-weight: 600;
    letter-spacing: -0.01em;
  }

  :global(.prose .callout-content) {
    color: var(--text);
  }

  :global(.prose .callout-content p) {
    margin-bottom: 0.75em;
  }

  :global(.prose .callout-content p:last-child) {
    margin-bottom: 0;
  }

  :global(.prose .callout-content ul),
  :global(.prose .callout-content ol) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }

  :global(.prose .callout-content li) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
    line-height: 1.6;
  }

  /* Divider styles */
  :global(.prose .divider) {
    border: none;
    border-top: 1px solid var(--divider);
    opacity: 0.6;
    margin: 3em 0;
  }

  /* StatRow styles */
  :global(.prose .stat-row) {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin: 1.5em 0;
    padding: 1.25rem;
    background: rgba(59, 130, 246, 0.05);
    border: 1px solid rgba(59, 130, 246, 0.2);
    border-radius: 0.5rem;
  }

  :global(.prose .stat-item) {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  :global(.prose .stat-label) {
    font-size: 0.75rem;
    font-weight: 500;
    color: var(--text-muted);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  :global(.prose .stat-value) {
    font-size: 1.125rem;
    font-weight: 600;
    font-family: 'SF Mono', 'JetBrains Mono', 'Menlo', 'Monaco', 'Courier New', monospace;
    color: var(--accent);
  }
</style>
