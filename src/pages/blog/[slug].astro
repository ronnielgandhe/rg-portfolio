---
export const prerender = false;
import { getCollection, type CollectionEntry } from 'astro:content';
import { getImage } from 'astro:assets';
import Layout from '../../layouts/Layout.astro';
import BlogPostLayout from '../../layouts/BlogPostLayout';
import { getRecentBlogPosts } from '../../utils/blog';
import { getRandomBackgroundKey, getOptimizedBackgrounds } from '../../utils/backgrounds';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.data.slug },
    props: { post },
  }));
}

interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { Content } = await post.render();

// Get optimized backgrounds
const backgroundMap = await getOptimizedBackgrounds(getImage);

// Fetch recent blog posts for navigation
const recentPosts = await getRecentBlogPosts();
---

<Layout
  title={`${post.data.title} - Ronniel Gandhe`}
  description={post.data.summary}
  canonical={`https://ronnielgandhe.com/blog/${post.data.slug}`}
>
  <BlogPostLayout
    client:load
    title={post.data.title}
    summary={post.data.summary}
    publishedAt={post.data.publishedAt}
    readingTime={post.data.readingTime}
    tags={post.data.tags || []}
    slug={post.data.slug || ''}
    initialBg={getRandomBackgroundKey()}
    backgroundMap={backgroundMap}
    recentPosts={recentPosts}
  >
    <Content />
  </BlogPostLayout>
</Layout>