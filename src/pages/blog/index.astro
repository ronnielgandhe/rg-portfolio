---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Nav from '../../components/global/Nav';

const posts = await getCollection('blog');
const sortedPosts = posts.sort((a, b) => 
  new Date(b.data.publishedAt).getTime() - new Date(a.data.publishedAt).getTime()
);

function formatDate(dateString: string) {
  return new Date(dateString).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<Layout
  title='Blog - Ronniel Gandhe'
  description='Technical writing on systematic trading, infrastructure, and software engineering'
  canonical='https://ronnielgandhe.com/blog'
>
  <Nav currentPath="/blog" />
  
  <main class="min-h-screen bg-bg pt-12">
    <div class="max-w-4xl mx-auto px-4 py-12">
      <!-- Header -->
      <div class="mb-12">
        <h1 class="text-3xl font-bold text-ink mb-4">Blog</h1>
        <p class="text-ink-mute">
          Technical writing on systematic trading, infrastructure, and software engineering.
        </p>
      </div>

      <!-- Posts -->
      <div class="space-y-8">
        {sortedPosts.map((post) => (
          <article class="group">
            <a 
              href={`/blog/${post.data.slug}`}
              class="block p-6 bg-bg-soft border border-border rounded-xl hover:border-accent/30 transition-apple"
            >
              <div class="flex items-start justify-between mb-3">
                <h2 class="text-xl font-semibold text-ink group-hover:text-accent transition-apple">
                  {post.data.title}
                </h2>
                <time class="text-ink-mute text-sm whitespace-nowrap ml-4">
                  {formatDate(post.data.publishedAt)}
                </time>
              </div>
              
              <p class="text-ink-mute leading-relaxed mb-4">
                {post.data.summary}
              </p>
              
              <div class="flex items-center justify-between">
                <div class="flex flex-wrap gap-2">
                  {post.data.tags.map((tag) => (
                    <span class="text-xs px-2 py-1 bg-border/50 text-ink-mute rounded-lg">
                      {tag}
                    </span>
                  ))}
                </div>
                
                {post.data.readingTime && (
                  <span class="text-xs text-ink-mute">
                    {post.data.readingTime} min read
                  </span>
                )}
              </div>
            </a>
          </article>
        ))}
      </div>

      {sortedPosts.length === 0 && (
        <div class="text-center py-12">
          <p class="text-ink-mute">No posts yet. Check back soon!</p>
        </div>
      )}
    </div>
  </main>
</Layout>